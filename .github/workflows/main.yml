name: testing building and destorying

# defines the trigger event
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# set up the build environment
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'

    # install dependencies and run tests
    - name: Install dependencies
      run: npm install
      
    - name: Start server
      run: npm start & 
      env:
        SERVER_PORT: 8080 
        
    - name: Run functionality tests
      env:
        SERVER_URL: http://localhost:8080
      run: |
        npm test.yml 


    - name: Run lint
      working-directory: 01-notebook
      run: |
        npm run lint

    # Deploy to AWS
    - name: Deployment
        steps:

# Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

        
       - name: Checkout
         uses: actions/checkout@v3

        - name: Setup ec2 script
          working-directory: deploy
          run: |
              ACCOUNT_GITHUB="${{ secrets.ACCOUNT_GITHUB }}"
              sed -i "s,__git_account__,https://github.com/${ACCOUNT_GITHUB}.keys," ec2-user-data.sh
              EC2USERDATA=$(cat ec2-user-data.sh | base64)
              echo "EC2USERDATA<<EOF" >> $GITHUB_ENV
              echo "$EC2USERDATA" >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV
        
        - name: Deploy to AWS Cloudformation
        id: creds
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: "${{ vars.STACK_NAME }}-network"
          template: deploy/template.yml



          - name: Deploy EC2 to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: "${{ vars.STACK_NAME }}-server"
          template: deploy/ec2-setup.yml
          Tags: ${{ vars.TAGS }}
          parameter-overrides:
            myIpAddress=${{ secrets.MYIPADDRESS }}, 
            UserDataScript= deploy/ec2-user-data.sh
          



      

    # Tear down and rebuild infrastructure
    - name: Tear down infrastructure
      run: ./teardown.sh

    - name: Rebuild infrastructure
      run: ./rebuild.sh